# Generated by Django 4.2.16 on 2024-11-15 18:17

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('pghistory', '0006_delete_aggregateevent'),
        ('shared', '0040_alter_container_cve_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='NixpkgsIssueCveThroughProxyEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NixpkgsIssueDerivationsThroughProxyEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NixpkgsIssueStatusEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('status', models.CharField(choices=[('U', 'unknown'), ('A', 'affected'), ('NA', 'notaffected'), ('O', 'notforus'), ('W', 'wontfix')], default='U', max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NixpkgsIssueCveThroughProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('shared.nixpkgsissue_cve',),
        ),
        migrations.CreateModel(
            name='NixpkgsIssueDerivationsThroughProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('shared.nixpkgsissue_derivations',),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixpkgsissue',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "shared_nixpkgsissuestatusevent" ("pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "status") VALUES (_pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."status"); RETURN NULL;', hash='fda376f9bb4abf590593ae23648ee56ebbb69918', operation='INSERT', pgid='pgtrigger_insert_insert_9d8a7', table='shared_nixpkgsissue', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixpkgsissue',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."status" IS DISTINCT FROM (NEW."status"))', func='INSERT INTO "shared_nixpkgsissuestatusevent" ("pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "status") VALUES (_pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."status"); RETURN NULL;', hash='a5e51cee40e2325ddd60c22303b15f320fa1f6ca', operation='UPDATE', pgid='pgtrigger_update_update_8088b', table='shared_nixpkgsissue', when='AFTER')),
        ),
        migrations.AddField(
            model_name='nixpkgsissuestatusevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='nixpkgsissuestatusevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='status_events', to='shared.nixpkgsissue'),
        ),
        migrations.AddField(
            model_name='nixpkgsissuederivationsthroughproxyevent',
            name='nixderivation',
            field=models.ForeignKey(db_constraint=False, db_tablespace='', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='shared.nixderivation'),
        ),
        migrations.AddField(
            model_name='nixpkgsissuederivationsthroughproxyevent',
            name='nixpkgsissue',
            field=models.ForeignKey(db_constraint=False, db_tablespace='', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='shared.nixpkgsissue'),
        ),
        migrations.AddField(
            model_name='nixpkgsissuederivationsthroughproxyevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='nixpkgsissuederivationsthroughproxyevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='shared.nixpkgsissuederivationsthroughproxy'),
        ),
        migrations.AddField(
            model_name='nixpkgsissuecvethroughproxyevent',
            name='cverecord',
            field=models.ForeignKey(db_constraint=False, db_tablespace='', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='shared.cverecord'),
        ),
        migrations.AddField(
            model_name='nixpkgsissuecvethroughproxyevent',
            name='nixpkgsissue',
            field=models.ForeignKey(db_constraint=False, db_tablespace='', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='shared.nixpkgsissue'),
        ),
        migrations.AddField(
            model_name='nixpkgsissuecvethroughproxyevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='nixpkgsissuecvethroughproxyevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='shared.nixpkgsissuecvethroughproxy'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixpkgsissuecvethroughproxy',
            trigger=pgtrigger.compiler.Trigger(name='cve_add_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "shared_nixpkgsissuecvethroughproxyevent" ("cverecord_id", "id", "nixpkgsissue_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."cverecord_id", NEW."id", NEW."nixpkgsissue_id", _pgh_attach_context(), NOW(), \'cve.add\', NEW."id"); RETURN NULL;', hash='b7967270916bd3f3970934d557da008930c9f4d0', operation='INSERT', pgid='pgtrigger_cve_add_insert_fd319', table='shared_nixpkgsissue_cve', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixpkgsissuecvethroughproxy',
            trigger=pgtrigger.compiler.Trigger(name='cve_remove_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "shared_nixpkgsissuecvethroughproxyevent" ("cverecord_id", "id", "nixpkgsissue_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."cverecord_id", OLD."id", OLD."nixpkgsissue_id", _pgh_attach_context(), NOW(), \'cve.remove\', OLD."id"); RETURN NULL;', hash='80e03776d83203a9a841ea5810eae50095904a99', operation='DELETE', pgid='pgtrigger_cve_remove_delete_abc9e', table='shared_nixpkgsissue_cve', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixpkgsissuederivationsthroughproxy',
            trigger=pgtrigger.compiler.Trigger(name='derivations_add_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "shared_nixpkgsissuederivationsthroughproxyevent" ("id", "nixderivation_id", "nixpkgsissue_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."nixderivation_id", NEW."nixpkgsissue_id", _pgh_attach_context(), NOW(), \'derivations.add\', NEW."id"); RETURN NULL;', hash='a92fe1a371b76da0589f5a27f1d435b5c2639aef', operation='INSERT', pgid='pgtrigger_derivations_add_insert_aaea0', table='shared_nixpkgsissue_derivations', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixpkgsissuederivationsthroughproxy',
            trigger=pgtrigger.compiler.Trigger(name='derivations_remove_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "shared_nixpkgsissuederivationsthroughproxyevent" ("id", "nixderivation_id", "nixpkgsissue_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."nixderivation_id", OLD."nixpkgsissue_id", _pgh_attach_context(), NOW(), \'derivations.remove\', OLD."id"); RETURN NULL;', hash='32468f3f9439b6004448df812b1a756eda3ce33b', operation='DELETE', pgid='pgtrigger_derivations_remove_delete_b6301', table='shared_nixpkgsissue_derivations', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixpkgsissuestatusevent',
            trigger=pgtrigger.compiler.Trigger(name='append_only', sql=pgtrigger.compiler.UpsertTriggerSql(func="RAISE EXCEPTION 'pgtrigger: Cannot update or delete rows from % table', TG_TABLE_NAME;", hash='d3705dd4886fd46d6413c83f282e9316f5ced577', operation='UPDATE OR DELETE', pgid='pgtrigger_append_only_24004', table='shared_nixpkgsissuestatusevent', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixpkgsissuederivationsthroughproxyevent',
            trigger=pgtrigger.compiler.Trigger(name='append_only', sql=pgtrigger.compiler.UpsertTriggerSql(func="RAISE EXCEPTION 'pgtrigger: Cannot update or delete rows from % table', TG_TABLE_NAME;", hash='d82851c222446adffc415bc29aa058d0f6871733', operation='UPDATE OR DELETE', pgid='pgtrigger_append_only_01040', table='shared_nixpkgsissuederivationsthroughproxyevent', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixpkgsissuecvethroughproxyevent',
            trigger=pgtrigger.compiler.Trigger(name='append_only', sql=pgtrigger.compiler.UpsertTriggerSql(func="RAISE EXCEPTION 'pgtrigger: Cannot update or delete rows from % table', TG_TABLE_NAME;", hash='6c5110b60e247d1c9698225b375ed51b1bf5457a', operation='UPDATE OR DELETE', pgid='pgtrigger_append_only_ee661', table='shared_nixpkgsissuecvethroughproxyevent', when='BEFORE')),
        ),
    ]
